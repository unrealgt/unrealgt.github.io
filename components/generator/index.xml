<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generator on Homepage</title>
    <link>https://unrealgt.github.io/components/generator/</link>
    <description>Recent content in Generator on Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Aug 2019 15:04:52 +0200</lastBuildDate>
    
	<atom:link href="https://unrealgt.github.io/components/generator/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Image</title>
      <link>https://unrealgt.github.io/components/generator/image/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:20 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/image/</guid>
      <description>GTImageGeneratorComponent  A virtual camera that enerates RGB images. A lot of camera specific paramters like exposure, ISO, shutterspeed, bloom, fov (focal-length) can be configured. These parameters can be found in the Image, PostProcessVolume and Projection Categories.
For maximum compatibility the generated images are encoded in a standardized format currently BMP and PNG are supported.
It is also possible to randomize resolution and gamma, which can bes useful for traning data, more ranomizable properties will be added in the future.</description>
    </item>
    
    <item>
      <title>Depth</title>
      <link>https://unrealgt.github.io/components/generator/depth/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:26 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/depth/</guid>
      <description>GTDepthImageGeneratorComponent  Generates depth images. Uses planar depth as default setting, perspective depth can be enabled via bUsePerspectiveDepth.
The depth is encoded in millimeters (mm) in the RGB channels of the image. This means the depth value is a 24bit with a maximum value of 16.777216 km. (TODO add nanometer option). The RGB values can be converted to mm using the following formula: R + G * 256 + B * 256 * 256.</description>
    </item>
    
    <item>
      <title>Normal</title>
      <link>https://unrealgt.github.io/components/generator/normal/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:33 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/normal/</guid>
      <description>GTImageNormalGeneratorComponent  Renders the surface normals of the objects in the scene. The normals are encoded in the RGB channels. They can be converted from RGB to world space coordinates using: RGB -&amp;gt; Normal: 2 * C/255 C - 1 Note: Anti-Aliasing is disabled for normal generators by default!PropertiesImageEGTImageFileFormat  ImageFormatThe format the image will have, currently only .bmp and .png are supported.FIntPoint  ResolutionThe resolution the generated images will have.</description>
    </item>
    
    <item>
      <title>Segmentation</title>
      <link>https://unrealgt.github.io/components/generator/segmentation/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:41 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/segmentation/</guid>
      <description>GTSegmentationGeneratorComponent  Can generate segmentation for an image. You can assign components color by adding a filter color pair to the ComponentToColor map. Requires &amp;ldquo;Enabled with stencil&amp;rdquo; project setting in Engine &amp;gt; Rendering &amp;gt; Postprocessing &amp;gt; Custom-Depth Stencil Pass Will emit a JSON file containing the configured color mappings called &amp;ldquo;segmentation_info&amp;rdquo; in Saved/UnrealGT/{SessionName}/{Time}/{SegmentationGeneratorName} Note: Anti-Aliasing is disabled for segmentation generators by default!PropertiesImageEGTImageFileFormat  ImageFormatThe format the image will have, currently only .</description>
    </item>
    
    <item>
      <title>ActorInfo</title>
      <link>https://unrealgt.github.io/components/generator/actorinfo/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:48 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/actorinfo/</guid>
      <description>GTActorInfoGeneratorComponent  Generates information about actors in a scene (e.g. MeshName, BoundingBoxes, ActorName). The Output format can be customize via formatting strings.PropertiesOutputFString  FormatVector2DStringFString  Format3DBoxStringFString  Format2DBoxStringFString  FormatRotatorStringFString  FormatVector3DStringbool  bAccurateBoundingBoxesDrastically Increase the accuracy of the bounding boxes, but requires an additional render pass. The additional render pass creates a segmentation map for the tracked actors and uses that map to refine the bounding boxes.</description>
    </item>
    
    <item>
      <title>Calibration</title>
      <link>https://unrealgt.github.io/components/generator/calibration/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:48 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/calibration/</guid>
      <description>GTCameraCalibrationComponent  Can bes used to get calibration parameters from image generators. Set CameraOneReference to retrieve data for one camera. Set CameraOneReference and CameraTwoReference to generate stereo calibration parameters.PropertiesCamerasFGTGeneratorReference  CameraOneReferenceFGTGeneratorReference  CameraTwoReference</description>
    </item>
    
  </channel>
</rss>