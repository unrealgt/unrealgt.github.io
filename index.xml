<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unreal GT on Homepage</title>
    <link>https://unrealgt.github.io/</link>
    <description>Recent content in Unreal GT on Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Aug 2019 17:38:45 +0200</lastBuildDate>
    
	<atom:link href="https://unrealgt.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Indroduction</title>
      <link>https://unrealgt.github.io/basics/indroduction/</link>
      <pubDate>Fri, 30 Aug 2019 17:38:45 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/basics/indroduction/</guid>
      <description>UnrealGT is a tool that can generate data from a virtual scene inside the Unreal Engine. The goal is to provide to provide a Toolkit that is as flexible as possible, with many data generation scenarios supported out of the box and the ability to easily extend the built in components for more complex scenarios. To achive this goal this tool is directly integrated into the Engine&amp;rsquo;s editor in the form of a plugin and therfore requires some basic knowldege about the unreal engine.</description>
    </item>
    
    <item>
      <title>Image</title>
      <link>https://unrealgt.github.io/components/generator/image/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:20 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/image/</guid>
      <description>ULImageGeneratorComponent   A virtual camera that enerates RGB images. A lot of camera specific paramters like exposure, ISO, shutterspeed, bloom, fov (focal-length) can be configured. These parameters can be found in the Image, PostProcessVolume and Projection Categories.
For maximum compatibility the generated images are encoded in a standardized format currently BMP and PNG are supported.
It is also possible to randomize resolution and gamma, which can bes useful for traning data, more ranomizable properties will be added in the future.</description>
    </item>
    
    <item>
      <title>Depth</title>
      <link>https://unrealgt.github.io/components/generator/depth/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:26 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/depth/</guid>
      <description>ULDepthImageGeneratorComponent   Generates depth images. Uses planar depth as default setting, perspective depth can be enabled via bUsePerspectiveDepth.
The depth is encoded in millimetres (mm) in the RGB channels of the image. This means the depth value is a 24bit with a maximum value of 16.777216 km. TODO add nanometre option The RGB values can be converted to mm using the following formula: R + G * 256 + B * 256 * 256.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://unrealgt.github.io/basics/installation/</link>
      <pubDate>Fri, 26 Jul 2019 14:14:04 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/basics/installation/</guid>
      <description>Requirements  Unreal Engine 4.21 or higher  Windows  Visual Studio 2017 or 2019 (2015 should work aswell but is not tested)  macOS  XCode Command Line Tools  Linux  Nothing if you already built the engine from source  Installation The only way to install the plugin is to build it from Source in an existing project. This requires you to build your project from source manually.</description>
    </item>
    
    <item>
      <title>Normal</title>
      <link>https://unrealgt.github.io/components/generator/normal/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:33 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/normal/</guid>
      <description>ULImageNormalGeneratorComponent   Renders the surface normals of the objects in the scene. The normals are encoded in the RGB channels. They can be converted from RGB to world space coordinates using: RGB -&amp;gt; Normal: 2 * C/255 C - 1 Properties
Image EULImageFileFormat  ImageFormat The format the image will have, currently only .bmp and .png are supported.  FIntPoint  Resolution The resolution the generated images will have.  bool  bRandomResolution If enabled will choose a random resolution between Resolution and ResolutionMax for each captured image.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://unrealgt.github.io/basics/getting-started/</link>
      <pubDate>Fri, 26 Jul 2019 14:20:36 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/basics/getting-started/</guid>
      <description>The Plugin exposes a vereity of actor components, which can be used to generate data from the virtual world inside the Editor. The following will explain how to capture images data from within level.
First open a level of your choice inside the unreal Editor.
 After that right click in the content browser to create a new Blueprint and choose Actor as base class.
  Open the created Blueprint in the editor.</description>
    </item>
    
    <item>
      <title>Segmentation</title>
      <link>https://unrealgt.github.io/components/generator/segmentation/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:41 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/segmentation/</guid>
      <description>ULSegmentationGeneratorComponent  

Properties
Image EULImageFileFormat  ImageFormat The format the image will have, currently only .bmp and .png are supported.  FIntPoint  Resolution The resolution the generated images will have.  bool  bRandomResolution If enabled will choose a random resolution between Resolution and ResolutionMax for each captured image. This is useful for generating Training data.  FIntPoint  ResolutionMax The maximum Resolution to use if bRandomResolution is enabled.</description>
    </item>
    
    <item>
      <title>Debugging Generation</title>
      <link>https://unrealgt.github.io/basics/debugging-generation/</link>
      <pubDate>Fri, 26 Jul 2019 14:25:09 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/basics/debugging-generation/</guid>
      <description>Click the ULab Icon in the Toolbar to open the debug Window. Type the name of the generator component you want to debug into the text input to render debug info.
 </description>
    </item>
    
    <item>
      <title>Actorinfo</title>
      <link>https://unrealgt.github.io/components/generator/actorinfo/</link>
      <pubDate>Tue, 20 Aug 2019 15:10:48 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/generator/actorinfo/</guid>
      <description>ULActorInfoGeneratorComponent  

Properties
Output FString  FormatVector2DString  FString  Format3DBoxString  FString  Format2DBoxString  FString  FormatRotatorString  FString  FormatVector3DString  bool  bAccurateBoundingBoxes This will drastically increase bounding box accuracy but requires an additional render pass. The Larger the resolution of the LinkedGenerator the larger the performance hit.  bool  bShouldApplyCloseMorph Apply Close for Bounding Box Segmentation  FULGeneratorReference  LinkedImageGenerator  FString  Header  FString  FormatActorString  FString  Separator  FString  Footer  TMap&amp;lt;FString, FString&amp;gt;  ReplaceStrings  Tracked float  MaxDistanceToCamera  FVector2D  MinimalRequiredBoundingBoxSize  bool  bOnlyTrackOnScreenActors  bool  bOnlyTrackRecentlyRenderedActors  TArray&amp;lt;FULObjectFilter&amp;gt;  TrackActorsThatMatchFilter  </description>
    </item>
    
    <item>
      <title>Http</title>
      <link>https://unrealgt.github.io/components/streamer/http/</link>
      <pubDate>Mon, 26 Aug 2019 23:20:16 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/streamer/http/</guid>
      <description>ULHttpStreamerComponent  

Properties
 FULGeneratorReference  GeneratorReference  Http FString  TargetUrl  EULHttpMethod  Method  EULHttpContentType  ContentType  </description>
    </item>
    
    <item>
      <title>Tcp</title>
      <link>https://unrealgt.github.io/components/streamer/tcp/</link>
      <pubDate>Tue, 20 Aug 2019 15:11:18 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/streamer/tcp/</guid>
      <description>ULSimpleTCPStreamer  

Properties
 FULGeneratorReference  GeneratorReference  FString  IPAddress  uint32  Port  </description>
    </item>
    
    <item>
      <title>File</title>
      <link>https://unrealgt.github.io/components/streamer/file/</link>
      <pubDate>Tue, 20 Aug 2019 15:11:07 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/components/streamer/file/</guid>
      <description>ULFileStreamerComponent  

Properties
 FULGeneratorReference  GeneratorReference  FString  FileNameFormat  </description>
    </item>
    
    <item>
      <title>ORB-SLAM2</title>
      <link>https://unrealgt.github.io/advanced_examples/orb-slam2/</link>
      <pubDate>Fri, 26 Jul 2019 16:39:11 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/advanced_examples/orb-slam2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>YOLO</title>
      <link>https://unrealgt.github.io/advanced_examples/yolo/</link>
      <pubDate>Fri, 26 Jul 2019 16:38:50 +0200</pubDate>
      
      <guid>https://unrealgt.github.io/advanced_examples/yolo/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>